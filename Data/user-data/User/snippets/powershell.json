{
	// Place your snippets for powershell here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"New-MwaFunction": {
		"prefix": ["New-MwaFunction"],
		"body": [
			"function New-MwaFunction {",
			"\t[CmdletBinding()]",
			"\t\tparam(",
			"\t\t\t[Parameter(",
			"\t\t\t\tMandatory=$$true,",
			"\t\t\t\tValueFromPipeline=$$true,",
			"\t\t\t\tValueFromPipelineByPropertyName=$$true,",
			"\t\t\t\tPosition = 0",
			"\t\t\t)]",
			"\t\t[Object] $$InputObject",
			"\t)",
			"",
			"\tbegin{",
			"\t\t$$StartTime = Get-Date",
			"\t\t$$function = $($$MyInvocation.MyCommand.Name)",
			"\t\tWrite-Verbose $('[', (Get-Date -f 'yyyy-MM-dd HH:mm:ss.fff'), ']', '[ Begin   ]', $$function -Join ' ')",
			"\t}",
			"",
			"\tprocess{",
			"\t\tWrite-Verbose $('[', (Get-Date -f 'yyyy-MM-dd HH:mm:ss.fff'), ']', '[ Process ]', $$function -Join ' ')",
			"\t\ttry{",
			"\t\t\t$$ret = [PSCustomObject]$$InputObject",
			"\t\t}catch{",
			"\t\t\tWrite-Warning $('ScriptName:', $($$_.InvocationInfo.ScriptName), 'LineNumber:', $($$_.InvocationInfo.ScriptLineNumber), 'Message:', $($$_.Exception.Message) -Join ' ')",
			"\t\t\t$$Error.Clear()",
			"\t\t}",
			"\t}",
			"",
			"\tend{",
			"\t\tWrite-Verbose $('[', (Get-Date -f 'yyyy-MM-dd HH:mm:ss.fff'), ']', '[ End     ]', $$function -Join ' ')",
			"\t\treturn $$ret",
			"\t}",
			"}"
		],
		"description": "An advanced function"
	}
}